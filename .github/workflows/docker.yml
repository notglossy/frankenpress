name: FrankenPress PHP Multi-Version Build

on:
  schedule:
    - cron: "0 0 * * 0" # Every Sunday at midnight UTC
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ["8.2", "8.3", "8.4"]
        platform: ["linux/amd64", "linux/arm64", "linux/arm/v7"]
    steps:
      - uses: actions/checkout@v4
     
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract platform suffix
        id: platform-suffix
        run: |
          if [[ "${{ matrix.platform }}" == "linux/amd64" ]]; then
            echo "suffix=amd64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.platform }}" == "linux/arm64" ]]; then
            echo "suffix=arm64" >> $GITHUB_OUTPUT
          elif [[ "${{ matrix.platform }}" == "linux/arm/v7" ]]; then
            echo "suffix=armv7" >> $GITHUB_OUTPUT
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: notglossy/frankenpress
          labels: |
            org.opencontainers.image.title=FrankenPress
            org.opencontainers.image.description=WordPress running on FrankenPHP - a high-performance PHP application server
            org.opencontainers.image.licenses=MIT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          push: true
          context: .
          tags: |
            notglossy/frankenpress:php-${{ matrix.php-version }}-${{ steps.platform-suffix.outputs.suffix }}
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-${{ steps.platform-suffix.outputs.suffix }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PHP_VERSION=${{ matrix.php-version }}
          labels: ${{ steps.meta.outputs.labels }}

  # Optional: Create multi-arch manifests after individual builds complete
  create-manifests:
    needs: docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ["8.2", "8.3", "8.4"]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push Docker Hub manifest
        run: |
          docker manifest create notglossy/frankenpress:php-${{ matrix.php-version }} \
            notglossy/frankenpress:php-${{ matrix.php-version }}-amd64 \
            notglossy/frankenpress:php-${{ matrix.php-version }}-arm64 \
            notglossy/frankenpress:php-${{ matrix.php-version }}-armv7
          docker manifest push notglossy/frankenpress:php-${{ matrix.php-version }}

      - name: Create and push GitHub Container Registry manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }} \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-armv7
          docker manifest push ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}
          