name: FrankenPress PHP Multi-Version Build

on:
  schedule:
    - cron: "0 0 * * 0" # Every Sunday at midnight UTC
  workflow_dispatch:

jobs:
  docker:
    strategy:
      matrix:
        include:
          # AMD64 builds run on x64 runners
          - php-version: "8.2"
            platform: "linux/amd64"
            runner: ["ubuntu-latest", "notglossy-amd64"]
            suffix: "amd64"
          - php-version: "8.3"
            platform: "linux/amd64"
            runner: ["ubuntu-latest", "notglossy-amd64"]
            suffix: "amd64"
          - php-version: "8.4"
            platform: "linux/amd64"
            runner: ["ubuntu-latest", "notglossy-amd64"]
            suffix: "amd64"
          
          # ARM64 builds run on ARM64 runners
          - php-version: "8.2"
            platform: "linux/arm64"
            runner: ["ubuntu-arm64-latest", "ubuntu-24.04-arm",  "ubuntu-22.04-arm", "notglossy-arm64"]
            suffix: "arm64"
          - php-version: "8.3"
            platform: "linux/arm64"
            runner: ["ubuntu-arm64-latest", "ubuntu-24.04-arm",  "ubuntu-22.04-arm", "notglossy-arm64"]
            suffix: "arm64"
          - php-version: "8.4"
            platform: "linux/arm64"
            runner: ["ubuntu-arm64-latest", "ubuntu-24.04-arm",  "ubuntu-22.04-arm", "notglossy-arm64"]
            suffix: "arm64"
          
          # ARMv7 builds run on ARM64 runners with emulation
          # (GitHub doesn't provide native ARMv7 runners)
          - php-version: "8.2"
            platform: "linux/arm/v7"
            runner: ["ubuntu-arm64-latest", "ubuntu-24.04-arm",  "ubuntu-22.04-arm", "notglossy-arm64"]
            suffix: "armv7"
          - php-version: "8.3"
            platform: "linux/arm/v7"
            runner: ["ubuntu-arm64-latest", "ubuntu-24.04-arm",  "ubuntu-22.04-arm", "notglossy-arm64"]
            suffix: "armv7"
          - php-version: "8.4"
            platform: "linux/arm/v7"
            runner: ["ubuntu-arm64-latest", "ubuntu-24.04-arm",  "ubuntu-22.04-arm", "notglossy-arm64"]
            suffix: "armv7"
    
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
     
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # Only needed for ARMv7 builds on ARM64 runners
        if: matrix.platform == 'linux/arm/v7'
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: notglossy/frankenpress
          labels: |
            org.opencontainers.image.title=FrankenPress
            org.opencontainers.image.description=WordPress running on FrankenPHP - a high-performance PHP application server
            org.opencontainers.image.licenses=MIT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          push: true
          context: .
          tags: |
            notglossy/frankenpress:php-${{ matrix.php-version }}-${{ matrix.suffix }}
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-${{ matrix.suffix }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PHP_VERSION=${{ matrix.php-version }}
          labels: ${{ steps.meta.outputs.labels }}

  # Create multi-arch manifests after individual builds complete
  create-manifests:
    needs: docker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ["8.2", "8.3", "8.4"]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push Docker Hub manifest
        run: |
          docker manifest create notglossy/frankenpress:php-${{ matrix.php-version }} \
            notglossy/frankenpress:php-${{ matrix.php-version }}-amd64 \
            notglossy/frankenpress:php-${{ matrix.php-version }}-arm64 \
            notglossy/frankenpress:php-${{ matrix.php-version }}-armv7
          docker manifest push notglossy/frankenpress:php-${{ matrix.php-version }}

      - name: Create and push GitHub Container Registry manifest
        run: |
          docker manifest create ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }} \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-amd64 \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-arm64 \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-armv7
          docker manifest push ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}
          