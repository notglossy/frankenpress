name: FrankenPress PHP Multi-Version Build

on:
  schedule:
    - cron: "0 0 * * 0" # Every Sunday at midnight UTC
  workflow_dispatch:

jobs:
  docker:
    strategy:
      matrix:
        include:
          # AMD64 builds run on x64 runners
          - php-version: "8.2"
            platform: "linux/amd64"
            runner: "ubuntu-latest"
            suffix: "amd64"
          - php-version: "8.3"
            platform: "linux/amd64"
            runner: "ubuntu-latest"
            suffix: "amd64"
          - php-version: "8.4"
            platform: "linux/amd64"
            runner: "ubuntu-latest" 
            suffix: "amd64"
          
          # ARM64 builds run on ARM64 runners
          - php-version: "8.2"
            platform: "linux/arm64"
            runner: "ubuntu-24.04-arm"
            suffix: "arm64"
          - php-version: "8.3"
            platform: "linux/arm64"
            runner: "ubuntu-24.04-arm"
            suffix: "arm64"
          - php-version: "8.4"
            platform: "linux/arm64"
            runner: "ubuntu-24.04-arm"
            suffix: "arm64"
          
          # ARMv7 builds run on ARM64 runners with emulation
          # (GitHub doesn't provide native ARMv7 runners)
          - php-version: "8.2"
            platform: "linux/arm/v7"
            runner: "ubuntu-24.04-arm"
            suffix: "armv7"
          - php-version: "8.3"
            platform: "linux/arm/v7"
            runner: "ubuntu-24.04-arm"
            suffix: "armv7"
          - php-version: "8.4"
            platform: "linux/arm/v7"
            runner: "ubuntu-24.04-arm"
            suffix: "armv7"
    
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v4
     
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # Only needed for ARMv7 builds on ARM64 runners
        if: matrix.platform == 'linux/arm/v7'
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: notglossy/frankenpress
          labels: |
            org.opencontainers.image.title=FrankenPress
            org.opencontainers.image.description=WordPress running on FrankenPHP - a high-performance PHP application server
            org.opencontainers.image.licenses=MIT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          push: true
          context: .
          tags: |
            notglossy/frankenpress:php-${{ matrix.php-version }}-${{ matrix.suffix }}
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-${{ matrix.suffix }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PHP_VERSION=${{ matrix.php-version }}
          labels: ${{ steps.meta.outputs.labels }}

  # Create multi-arch manifests after individual builds complete
  create-manifests:
    needs: [docker-self-hosted, docker-github-hosted]
    if: always() # Run even if some jobs failed, as long as we have all architectures
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ["8.2", "8.3", "8.4"]
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Inspect the existing images to verify they're not already manifest lists
      - name: Inspect Docker Hub images
        id: inspect-dockerhub
        run: |
          IMAGES_OK=true
          
          # Check each architecture image
          for ARCH in amd64 arm64 armv7; do
            echo "Inspecting notglossy/frankenpress:php-${{ matrix.php-version }}-${ARCH}"
            if ! docker buildx imagetools inspect notglossy/frankenpress:php-${{ matrix.php-version }}-${ARCH} &>/dev/null; then
              echo "::warning::Image notglossy/frankenpress:php-${{ matrix.php-version }}-${ARCH} does not exist"
              IMAGES_OK=false
            else
              # Check if it's already a manifest list
              if docker buildx imagetools inspect notglossy/frankenpress:php-${{ matrix.php-version }}-${ARCH} | grep -q "Manifest List"; then
                echo "::warning::Image notglossy/frankenpress:php-${{ matrix.php-version }}-${ARCH} is already a manifest list"
                IMAGES_OK=false
              fi
            fi
          done
          
          echo "IMAGES_OK=${IMAGES_OK}" >> $GITHUB_ENV

      # Create the manifest with --amend flag to handle possible existing manifests
      - name: Create and push Docker Hub manifest
        if: env.IMAGES_OK == 'true'
        run: |
          # First try to inspect if a manifest already exists
          if docker buildx imagetools inspect notglossy/frankenpress:php-${{ matrix.php-version }} &>/dev/null; then
            echo "Manifest already exists, removing it first"
            # Unfortunately, there's no direct way to delete a manifest in Docker CLI
            # We'll create a dummy manifest to replace it
            docker manifest create notglossy/frankenpress:php-${{ matrix.php-version }} \
              --amend notglossy/frankenpress:php-${{ matrix.php-version }}-amd64
            docker manifest push notglossy/frankenpress:php-${{ matrix.php-version }}
          fi
          
          # Now create the proper manifest
          docker manifest create notglossy/frankenpress:php-${{ matrix.php-version }} \
            --amend notglossy/frankenpress:php-${{ matrix.php-version }}-amd64 \
            --amend notglossy/frankenpress:php-${{ matrix.php-version }}-arm64 \
            --amend notglossy/frankenpress:php-${{ matrix.php-version }}-armv7
          
          # Add specific platform annotations to ensure correct architecture targeting
          docker manifest annotate notglossy/frankenpress:php-${{ matrix.php-version }} \
            notglossy/frankenpress:php-${{ matrix.php-version }}-amd64 --os linux --arch amd64
          docker manifest annotate notglossy/frankenpress:php-${{ matrix.php-version }} \
            notglossy/frankenpress:php-${{ matrix.php-version }}-arm64 --os linux --arch arm64
          docker manifest annotate notglossy/frankenpress:php-${{ matrix.php-version }} \
            notglossy/frankenpress:php-${{ matrix.php-version }}-armv7 --os linux --arch arm --variant v7
            
          docker manifest push --purge notglossy/frankenpress:php-${{ matrix.php-version }}

      - name: Create and push GitHub Container Registry manifest
        if: env.IMAGES_OK == 'true'
        run: |
          # Check if manifest already exists
          if docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }} &>/dev/null; then
            echo "Manifest already exists, removing it first"
            # Create a temporary manifest to replace the existing one
            docker manifest create ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }} \
              --amend ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-amd64
            docker manifest push ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}
          fi
          
          # Now create the proper manifest
          docker manifest create ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }} \
            --amend ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-amd64 \
            --amend ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-arm64 \
            --amend ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-armv7
          
          # Add specific platform annotations
          docker manifest annotate ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }} \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-amd64 --os linux --arch amd64
          docker manifest annotate ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }} \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-arm64 --os linux --arch arm64
          docker manifest annotate ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }} \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}-armv7 --os linux --arch arm --variant v7
            
          docker manifest push --purge ghcr.io/${{ github.repository_owner }}/frankenpress:php-${{ matrix.php-version }}

      # Create latest tag with all PHP versions
      - name: Create and push latest manifest 
        if: matrix.php-version == '8.4' && env.IMAGES_OK == 'true'
        run: |
          # Check if manifest already exists
          if docker buildx imagetools inspect notglossy/frankenpress:latest &>/dev/null; then
            echo "Latest manifest already exists, removing it first"
            docker manifest create notglossy/frankenpress:latest \
              --amend notglossy/frankenpress:php-8.4-amd64
            docker manifest push notglossy/frankenpress:latest
          fi
          
          # Create latest tag pointing to latest PHP version (8.4)
          docker manifest create notglossy/frankenpress:latest \
            --amend notglossy/frankenpress:php-8.4-amd64 \
            --amend notglossy/frankenpress:php-8.4-arm64 \
            --amend notglossy/frankenpress:php-8.4-armv7
          
          # Add specific platform annotations
          docker manifest annotate notglossy/frankenpress:latest \
            notglossy/frankenpress:php-8.4-amd64 --os linux --arch amd64
          docker manifest annotate notglossy/frankenpress:latest \
            notglossy/frankenpress:php-8.4-arm64 --os linux --arch arm64
          docker manifest annotate notglossy/frankenpress:latest \
            notglossy/frankenpress:php-8.4-armv7 --os linux --arch arm --variant v7
            
          docker manifest push --purge notglossy/frankenpress:latest
          
          # Same for GitHub Container Registry
          if docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/frankenpress:latest &>/dev/null; then
            echo "Latest GHCR manifest already exists, removing it first"
            docker manifest create ghcr.io/${{ github.repository_owner }}/frankenpress:latest \
              --amend ghcr.io/${{ github.repository_owner }}/frankenpress:php-8.4-amd64
            docker manifest push ghcr.io/${{ github.repository_owner }}/frankenpress:latest
          fi
          
          docker manifest create ghcr.io/${{ github.repository_owner }}/frankenpress:latest \
            --amend ghcr.io/${{ github.repository_owner }}/frankenpress:php-8.4-amd64 \
            --amend ghcr.io/${{ github.repository_owner }}/frankenpress:php-8.4-arm64 \
            --amend ghcr.io/${{ github.repository_owner }}/frankenpress:php-8.4-armv7
          
          # Add specific platform annotations
          docker manifest annotate ghcr.io/${{ github.repository_owner }}/frankenpress:latest \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-8.4-amd64 --os linux --arch amd64
          docker manifest annotate ghcr.io/${{ github.repository_owner }}/frankenpress:latest \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-8.4-arm64 --os linux --arch arm64
          docker manifest annotate ghcr.io/${{ github.repository_owner }}/frankenpress:latest \
            ghcr.io/${{ github.repository_owner }}/frankenpress:php-8.4-armv7 --os linux --arch arm --variant v7
            
          docker manifest push --purge ghcr.io/${{ github.repository_owner }}/frankenpress:latest
